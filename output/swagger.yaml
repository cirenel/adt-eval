openapi:  3.0.1
info: 
  title:  adt-eval
  description:  adt-eval Nov-2022
  contact: 
    name:  Claire Luikart
  version:  "0"
servers: 
  -url: https://adt-eval-dwfsjdz4ua-ue.a.run.app
paths:
  /show/{page}: 
    get: 
      summary:  show paginated table from data.
      parameters: 
        -name:  page
        in: path
        required:  false
        description:  current pagination index
        schema: 
            type:  integer
            format:  int64
            minimum:  1
      responses: 
        '200': 
          description:  OK
  /search: 
    get: 
      summary:  provide search form for user input.
      responses: 
        '200': 
          description:  OK
    post: 
      summary:  queries database based on user input from form.
      responses: 
        '200': 
          description:  OK
  /sortBy/{column}/{page}: 
    get: 
      summary:  applies order by sorting criteria to last queried table based on user input.
      parameters: 
        -name:  column
        in:  path
        required:  true
        description:  the column specified to order the table by.
        schema: 
            type :  string
            format:  xxxxxx
            minimum:  1
        - name :  page
        in:  path
        required:  false
        description:  current pagination index.
        schema: 
            type :  integer
            format:  int64
            minimum:  1
      responses: 
        '200': 
          description:  OK
  /showFilter: 
    post: 
      summary:  filters last queries table using fields provided by form, displays paginated results.
      responses: 
        '200': 
          description:  OK
  /edit/{showNum}: 
    get: 
      summary:  renders form for selected entry and populates fields with entry's existing values.
      parameters: 
        - name:  showNum
        in:  path
        required:  true
        description:  the unique show id used to retrieve the record from the database.
        schema: 
            type :  integer
            format:  int64
            minimum:  1
      responses: 
        '200': 
          description:  OK
    post: 
    summary:  applies update to database entry based on user input from form.
      responses: 
        '200': 
          description:  OK
  /add: 
    get: 
      summary:  renders blank entry form.
      responses: 
        '200': 
          description:  OK
    post: 
      summary:  created new entry based on user input from the form.
      responses: 
        '200': 
          description:  OK
  /delete/{showNum}: 
    post: 
      summary:  deletes entry based on entry id and updates database.
      parameters: 
        - name:  showNum
        in:  path
        required:  true
        description:  the unique show id used to retrieve the record from the database.
        schema: 
            type :  integer
            format:  int64
            minimum:  1
      responses: 
        '200': 
          description:  OK
components: 
  schemas: 
    Entry: 
      type:  object
      properties: 
        id: 
          type:  integer
          format:  int64
        title: 
          type:  string
        description: 
          type:  string
        director: 
          type:  string
        cast_list: 
          type:  string
        year_released: 
          type:  integer
        rating: 
          type:  string
        country: 
          type: string
      description:  "contains the listing information for a netflix entry including: 
        -title
        -rating
        -runtime
        -date of release
        -date added
        -description
        -director
        -cast list
        -rating        "